{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/login/login.component.css","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/register/new-user.ts","webpack:///./src/app/auth/register/register.component.css","webpack:///./src/app/auth/register/register.component.html","webpack:///./src/app/auth/register/register.component.ts","webpack:///./src/app/auth/user-info.ts","webpack:///./src/app/auth/user.service.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/projects/add-project/add-project.component.css","webpack:///./src/app/projects/add-project/add-project.component.html","webpack:///./src/app/projects/add-project/add-project.component.ts","webpack:///./src/app/projects/all-projects/all-projects.component.css","webpack:///./src/app/projects/all-projects/all-projects.component.html","webpack:///./src/app/projects/all-projects/all-projects.component.ts","webpack:///./src/app/projects/new-project.ts","webpack:///./src/app/projects/project-details/project-details.component.css","webpack:///./src/app/projects/project-details/project-details.component.html","webpack:///./src/app/projects/project-details/project-details.component.ts","webpack:///./src/app/projects/project-summary.ts","webpack:///./src/app/projects/project-summary/project-summary.component.css","webpack:///./src/app/projects/project-summary/project-summary.component.html","webpack:///./src/app/projects/project-summary/project-summary.component.ts","webpack:///./src/app/projects/projects-routing.module.ts","webpack:///./src/app/projects/projects.module.ts","webpack:///./src/app/projects/projects.service.ts","webpack:///./src/app/tasks/add-task/add-task.component.css","webpack:///./src/app/tasks/add-task/add-task.component.html","webpack:///./src/app/tasks/add-task/add-task.component.ts","webpack:///./src/app/tasks/task-details/task-details.component.css","webpack:///./src/app/tasks/task-details/task-details.component.html","webpack:///./src/app/tasks/task-details/task-details.component.ts","webpack:///./src/app/tasks/task-summary.ts","webpack:///./src/app/tasks/task-summary/task-summary.component.css","webpack:///./src/app/tasks/task-summary/task-summary.component.html","webpack:///./src/app/tasks/task-summary/task-summary.component.ts","webpack:///./src/app/tasks/tasks-routing.module.ts","webpack:///./src/app/tasks/tasks.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {RouterModule, Routes} from \"@angular/router\";\nimport {NgModule} from \"@angular/core\";\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    redirectTo: 'projects',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    redirectTo: 'projects'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"\"","module.exports = \"<app-navbar *ngIf=\\\"isLoggedIn()\\\"></app-navbar>\\n<div class=\\\"container-fluid mt-2\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"./auth/auth.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private authService: AuthService,\n              private translate: TranslateService) {}\n\n  ngOnInit() {\n    this.translate.setDefaultLang('en');\n    this.translate.use(navigator.languages[1] || navigator.language);\n  }\n\n  isLoggedIn(): boolean {\n    return this.authService.isAuthenticated();\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {LOCALE_ID, NgModule} from '@angular/core';\n\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport {AppComponent} from './app.component';\nimport {AuthModule} from './auth/auth.module';\n\nimport {ProjectsModule} from \"./projects/projects.module\";\nimport {TasksModule} from \"./tasks/tasks.module\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {NavbarComponent} from './navbar/navbar.component';\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {TranslateHttpLoader} from \"@ngx-translate/http-loader\";\nimport {registerLocaleData} from \"@angular/common\";\nimport localePl from '@angular/common/locales/pl';\n\nregisterLocaleData(localePl, 'pl');\n\nexport function HttpLoaderFactory(http: HttpClient): TranslateLoader {\n  return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule.forRoot(),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    AuthModule,\n    TasksModule,\n    ProjectsModule,\n    AppRoutingModule\n  ],\n  providers: [\n    {\n      provide: LOCALE_ID,\n      useValue: 'pl'\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {CanActivate, Router} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {AuthService} from \"./auth.service\";\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {}\n\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n","import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {RegisterComponent} from \"./register/register.component\";\nimport {LoginComponent} from \"./login/login.component\";\n\nconst authRoutes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(authRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AuthRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {AuthGuardService} from \"./auth-guard.service\";\nimport {RouterModule} from \"@angular/router\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {AuthService} from \"./auth.service\";\nimport {JwtModule, JwtModuleOptions} from \"@auth0/angular-jwt\";\nimport {AuthRoutingModule} from \"./auth-routing.module\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {UserService} from \"./user.service\";\n\nconst jwtOptions: JwtModuleOptions = {\n  config: {\n    tokenGetter: () => localStorage.getItem('token'),\n    headerName: 'X-AUTH-TOKEN',\n    skipWhenExpired: true,\n    authScheme: ''\n  }\n};\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    JwtModule.forRoot(jwtOptions),\n    AuthRoutingModule,\n    TranslateModule\n  ],\n  declarations: [\n    LoginComponent,\n    RegisterComponent\n  ],\n  providers: [\n    AuthGuardService,\n    AuthService,\n    UserService\n  ]\n})\nexport class AuthModule {\n}\n","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport {HttpClient, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {tap} from 'rxjs/operators';\nimport {NewUser} from \"./register/new-user\";\n\nexport class AuthToken {\n  token: string;\n}\n\n@Injectable()\nexport class AuthService {\n\n  constructor(public jwtHelper: JwtHelperService,\n              private http: HttpClient) { }\n\n  isAuthenticated(): boolean {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n  login(email: string, password: string): Observable<AuthToken> {\n    return this.http.get<AuthToken>('/auth/token', {\n      params: {email, password}\n    }).pipe(tap((response: AuthToken) => localStorage.setItem('token', response.token)));\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n  }\n\n  register(newUser: NewUser): Observable<any> {\n    return this.http.post<any>('/auth/register', newUser);\n  }\n\n}\n","module.exports = \".form-control.ng-touched.ng-invalid:not(form) {\\n  border-color: rgb(220, 53, 69);\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"offset-md-4 col-md-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h3 class=\\\"card-title\\\">Zaloguj się</h3>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error\\\">\\n            {{'dws.httpErrors.' + error?.errorCode | translate:error?.params}}\\n          </div>\\n          <form #loginForm=\\\"ngForm\\\" role=\\\"form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"login()\\\">\\n            <fieldset>\\n              <div class=\\\"form-group\\\">\\n                <input class=\\\"form-control\\\" placeholder=\\\"Adres e-mail\\\"\\n                       type=\\\"text\\\" formControlName=\\\"email\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <input class=\\\"form-control\\\" placeholder=\\\"Hasło\\\" type=\\\"password\\\"\\n                       formControlName=\\\"password\\\">\\n              </div>\\n              <button class=\\\"btn btn-lg btn-primary btn-block\\\" [disabled]=\\\"!loginForm.form.valid\\\" type=\\\"submit\\\">\\n                <i class=\\\"fa fa-sign-in\\\" aria-hidden=\\\"true\\\"></i>Zaloguj się\\n              </button>\\n            </fieldset>\\n          </form>\\n          <a routerLink=\\\"/register\\\" class=\\\"btn btn-info btn-block\\\">\\n            <i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i> Rejestracja\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {AuthService} from \"../auth.service\";\nimport {Router} from \"@angular/router\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n  error: any;\n\n  constructor(private fb: FormBuilder,\n              private authService: AuthService,\n              private router: Router,\n              private translate: TranslateService) {\n  }\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  login() {\n    const val = this.form.value;\n    if (val.email && val.password && this.form.valid) {\n      this.authService.login(val.email, val.password)\n        .subscribe(\n          () => this.router.navigateByUrl('/projects'),\n          (error: HttpErrorResponse) => this.handleError(error)\n        );\n    }\n  }\n\n  handleError(errorResponse: HttpErrorResponse) {\n    this.error = errorResponse.error;\n  }\n\n}\n","export class NewUser {\n  constructor(\n    public email: string,\n    public firstName: string,\n    public lastName: string,\n    public password: string\n  ) {}\n}\n","module.exports = \".error-span {\\n  display: block;\\n}\\n\"","module.exports = \"<form [formGroup]=\\\"newUser\\\" (ngSubmit)=\\\"register()\\\" novalidate>\\n  <legend>\\n    Poniżej znajduje się formularz rejestracji w systemie. Wszystkie pola są wymagane.\\n  </legend>\\n  <fieldset>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2 col-form-label\\\" for=\\\"email\\\">\\n        Adres e-mail\\n      </label>\\n      <div class=\\\"col-md-5\\\">\\n        <input id=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\"\\n               [ngClass]=\\\"{'is-invalid': isInvalid(email)}\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2 col-form-label\\\" for=\\\"firstName\\\">\\n        Imię\\n      </label>\\n      <div class=\\\"col-md-5\\\">\\n        <input id=\\\"firstName\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"firstName\\\"\\n               [ngClass]=\\\"{'is-invalid': isInvalid(firstName)}\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2 col-form-label\\\" for=\\\"lastName\\\">\\n        Nazwisko\\n      </label>\\n      <div class=\\\"col-md-5\\\">\\n        <input id=\\\"lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lastName\\\"\\n               [ngClass]=\\\"{'is-invalid': isInvalid(lastName)}\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2 col-form-label\\\" for=\\\"password\\\">\\n        Hasło\\n      </label>\\n      <div class=\\\"col-md-5\\\">\\n        <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\"\\n               [ngClass]=\\\"{'is-invalid': isInvalid(password)}\\\">\\n        <div class=\\\"invalid-feedback\\\">\\n          <span class=\\\"error-span\\\" *ngIf=\\\"password.errors?.minlength\\\">Hasło powinno mieć co najmniej 6 znaków</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2 col-form-label\\\" for=\\\"passwordRepeated\\\">\\n        Powtórz hasło\\n      </label>\\n      <div class=\\\"col-md-5\\\">\\n        <input id=\\\"passwordRepeated\\\" type=\\\"password\\\" class=\\\"form-control\\\"\\n               [ngClass]=\\\"{'is-invalid': isInvalid(passwordRepeated)}\\\"\\n               formControlName=\\\"passwordRepeated\\\">\\n        <div class=\\\"invalid-feedback\\\">\\n          <span class=\\\"error-span\\\" *ngIf=\\\"passwordRepeated.errors?.MatchPassword\\\">Podane hasło jest inne!</span>\\n          <span class=\\\"error-span\\\" *ngIf=\\\"passwordRepeated.errors?.minlength\\\">Hasło powinno mieć co najmniej 6 znaków</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"alert alert-danger\\\" [hidden]=\\\"errors?.length == 0\\\">\\n      <p *ngFor=\\\"let error of errors\\\">\\n        {{error}}\\n      </p>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" [disabled]=\\\"newUser.invalid\\\">\\n      <i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i> Zarejestruj się\\n    </button>\\n  </fieldset>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../auth.service\";\nimport {Router} from \"@angular/router\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {NewUser} from \"./new-user\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  newUser: FormGroup;\n  errors: string[];\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.errors = [];\n    this.newUser = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      passwordRepeated: ['', [Validators.required, Validators.minLength(6)]]\n    }, {\n      validator: RegisterComponent.MatchPassword\n    })\n  }\n\n  get email() {\n    return this.newUser.get('email');\n  }\n\n  get firstName() {\n    return this.newUser.get('firstName');\n  }\n\n  get lastName() {\n    return this.newUser.get('lastName');\n  }\n\n  get passwordRepeated() {\n    return this.newUser.get('passwordRepeated');\n  }\n\n  get password() {\n    return this.newUser.get('password');\n  }\n\n  register() {\n    this.authService.register(new NewUser(\n      this.newUser.get('email').value,\n      this.newUser.get('firstName').value,\n      this.newUser.get('lastName').value,\n      this.newUser.get('password').value\n    )).subscribe(\n      () => this.router.navigate(['login']),\n      (error: HttpErrorResponse) => this.handleRegisterError(error)\n    );\n  }\n\n  private handleRegisterError(error: HttpErrorResponse) {\n    if (error.status == 400) {\n      let validationError: any = error.error;\n      this.errors = validationError.fieldErrors.map((fieldError: any) => fieldError.message);\n    } else {\n      this.errors = [error.message];\n    }\n  }\n\n  static MatchPassword(abstractControl: AbstractControl) {\n    let password: AbstractControl = abstractControl.get('password');\n    let passwordValue: string = password.value;\n    let passwordRepeated: AbstractControl = abstractControl.get('passwordRepeated');\n    let passwordRepeatedValue: string = passwordRepeated.value;\n    let notMatched: boolean = passwordValue && passwordRepeatedValue\n    && passwordValue != passwordRepeatedValue;\n    let passwordRepeatedErrors = abstractControl.get('passwordRepeated').errors;\n    if (notMatched) {\n      if (passwordRepeatedErrors) {\n        abstractControl.get('passwordRepeated').errors['MatchPassword'] = true;\n      } else {\n        abstractControl.get('passwordRepeated').setErrors({\n          'MatchPassword': true\n        });\n      }\n    } else if (passwordRepeatedErrors) {\n      delete abstractControl.get('passwordRepeated').errors['MatchPassword'];\n    }\n  }\n\n  isInvalid(control: AbstractControl): boolean {\n    return control.invalid && (control.touched || control.dirty);\n  }\n}\n","export class UserInfo {\n  firstName: string;\n  lastName: string;\n\n  constructor(public email: string, public fullName?: string) {}\n}\n","import { Injectable } from '@angular/core';\nimport {UserInfo} from \"./user-info\";\nimport {JwtHelperService} from \"@auth0/angular-jwt\";\n\n@Injectable()\nexport class UserService {\n\n  constructor(private jwtHelper: JwtHelperService) { }\n\n  get currentUser(): UserInfo {\n    let claims = this.jwtHelper.decodeToken(localStorage.getItem('token'));\n    return new UserInfo(claims.sub, claims.name);\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n  <ul class=\\\"navbar-nav\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a routerLink=\\\"\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link\\\">\\n        <i class=\\\"fa fa-home\\\" aria-hidden=\\\"true\\\"></i> Strona główna\\n      </a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a routerLink=\\\"/projects\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link\\\">\\n        <i class=\\\"fa fa-folder\\\" aria-hidden=\\\"true\\\"></i> Projekty\\n      </a>\\n    </li>\\n  </ul>\\n\\n  <p class=\\\"navbar-text\\\" *ngIf=\\\"loggedIn\\\">Zalogowany jako {{loggedIn.username}}</p>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary float-right\\\" (click)=\\\"logout()\\\">\\n    <i class=\\\"fa fa-sign-out\\\" aria-hidden=\\\"true\\\"></i> Wyloguj\\n  </button>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../auth/auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['login']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<legend>\\n  Aby dodać nowy projekt należy wypełnić poniższy formularz.\\n</legend>\\n<form [formGroup]=\\\"newProject\\\" (ngSubmit)=\\\"createProject()\\\" novalidate>\\n  <fieldset>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2 col-form-label\\\" for=\\\"name\\\">\\n        Nazwa projektu\\n      </label>\\n      <div class=\\\"col-md-5\\\">\\n        <input id=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\"\\n                  [ngClass]=\\\"{'is-invalid': isInvalid(name)}\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2 col-form-label\\\" for=\\\"description\\\">\\n        Dodatkowy opis projektu\\n      </label>\\n      <div class=\\\"col-md-5\\\">\\n        <textarea id=\\\"description\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\"\\n                  [ngClass]=\\\"{'is-invalid': isInvalid(description)}\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"col-md-offset-2 col-md-10\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\">\\n          Stwórz\\n        </button>\\n      </div>\\n    </div>\\n  </fieldset>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {ProjectsService} from \"../projects.service\";\nimport {NewProject} from \"../new-project\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-add-project',\n  templateUrl: './add-project.component.html',\n  styleUrls: ['./add-project.component.css']\n})\nexport class AddProjectComponent implements OnInit {\n\n  newProject: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,\n              private projectsService: ProjectsService,\n              private router: Router) {}\n\n  ngOnInit() {\n    this.newProject = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.maxLength(40)]],\n      description: ['', Validators.maxLength(1024)]\n    });\n  }\n\n  isInvalid(control: AbstractControl): boolean {\n    return control.invalid && (control.touched || control.dirty);\n  }\n\n  get name(): AbstractControl {\n    return this.newProject.get('name');\n  }\n\n  get description(): AbstractControl {\n    return this.newProject.get('description');\n  }\n\n  createProject() {\n    this.projectsService.createProject(new NewProject(\n      this.name.value, this.description.value\n    )).subscribe(projectId => this.router.navigate(['/projects', projectId]));\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <a class=\\\"btn btn-primary\\\" routerLink=\\\"/projects/add\\\">\\n          <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> {{'dws.project.all.createNew' | translate}}\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div *ngIf=\\\"projects?.length > 0; then showProjects else showMsgBlock\\\"></div>\\n\\n  <ng-template #showProjects>\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"text-center\\\">\\n        <h3 translate>dws.project.all.header</h3>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div *ngFor=\\\"let project of projects; trackBy: trackByProjects\\\" class=\\\"col-md-4\\\">\\n          <project-summary  [project]=\\\"project\\\"></project-summary>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #showMsgBlock>\\n    <div class=\\\"col-md-8 offset-md-2\\\">\\n      <div class=\\\"alert alert-info text-center\\\"\\n           [innerHTML]=\\\"'dws.project.all.noProjectsMsg' | translate\\\"></div>\\n    </div>\\n  </ng-template>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ProjectSummary} from \"../project-summary\";\nimport {ProjectsService} from \"../projects.service\";\n\n@Component({\n  selector: 'app-all-projects',\n  templateUrl: './all-projects.component.html',\n  styleUrls: ['./all-projects.component.css']\n})\nexport class AllProjectsComponent implements OnInit {\n  projects: ProjectSummary[];\n\n  constructor(private projectsService: ProjectsService) {}\n\n  ngOnInit() {\n    this.loadProjects();\n  }\n\n  private loadProjects(): void {\n    this.projectsService.getAllUserProjects()\n      .subscribe((projects: ProjectSummary[]) => {\n        this.projects = projects;\n      }, (error: any) => {\n        console.error(error);\n      });\n  }\n\n  trackByProjects(index: number, project: ProjectSummary): string {\n    return project.id;\n  }\n}\n","export class NewProject {\n  constructor(public name: string, public description: string) {}\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"project\\\" class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <div class=\\\"btn-toolbar mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <div *ngIf=\\\"isProjectAdmin; then projectAdminGroup else projectParticipantGroup\\\"></div>\\n        <ng-template #projectAdminGroup>\\n          <a [routerLink]=\\\"addTaskLink\\\" class=\\\"btn btn-success\\\">\\n            <span class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></span>\\n            {{'dws.project.details.toolbar.addTask' | translate}}\\n          </a>\\n          <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"removeProject()\\\">\\n            <span class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></span>\\n            {{'dws.project.details.toolbar.deleteProject' | translate}}\\n          </button>\\n        </ng-template>\\n        <ng-template #projectParticipantGroup>\\n          <a href=\\\"mailto:{{project.administrator.email}}\\\" class=\\\"btn btn-info\\\">\\n            <span class=\\\"fa fa-envelope\\\" aria-hidden=\\\"true\\\"></span>\\n            {{'dws.project.details.toolbar.mailToAdmin' | translate}}\\n          </a>\\n        </ng-template>\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"hasTasks; then tasksSummaries else noTasksInfo\\\"></div>\\n    <ng-template #noTasksInfo>\\n      <div class=\\\"alert alert-info text-center\\\" role=\\\"alert\\\"\\n           [innerHTML]=\\\"'dws.project.details.noTasksAlert' | translate\\\"></div>\\n    </ng-template>\\n    <ng-template #tasksSummaries>\\n      <div class=\\\"text-center\\\">\\n        <h3 translate [translateParams]=\\\"project\\\">dws.project.details.taskList.header</h3>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div *ngFor=\\\"let task of project.tasks; trackBy: trackByTasks\\\" class=\\\"col-md-6\\\">\\n          <task-summary [task]=\\\"task\\\"></task-summary>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </div>\\n\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\" translate>dws.project.details.card.header</div>\\n      <div class=\\\"list-group list-group-flush\\\">\\n        <div class=\\\"list-group-item flex-column align-items-start\\\">\\n          <small translate>dws.project.details.card.name</small><br/>\\n          <span>{{project.name}}</span>\\n        </div>\\n        <div class=\\\"list-group-item flex-column align-items-start\\\">\\n          <small translate>dws.project.details.card.description</small><br/>\\n          <span>{{project.description}}</span>\\n        </div>\\n        <div class=\\\"list-group-item flex-column align-items-start\\\">\\n          <small translate>dws.project.details.card.admin</small><br/>\\n          <span>{{project.administrator.fullName}}</span>\\n        </div>\\n        <div class=\\\"list-group-item flex-column align-items-start\\\">\\n          <small translate>dws.project.details.card.creationDate</small><br/>\\n          <span>{{project.creationDate | date:'dd.MM.yyyy HH:mm'}}</span>\\n        </div>\\n        <div class=\\\"list-group-item flex-column align-items-start\\\">\\n          <small translate>dws.project.details.card.lastModified</small><br/>\\n          <span>{{project.lastModified | date:'dd.MM.yyyy HH:mm'}}</span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"isError\\\">\\n  TODO template błędu\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, ParamMap, Router} from \"@angular/router\";\nimport {ProjectsService} from \"../projects.service\";\nimport {switchMap, tap, catchError} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {ProjectInfo} from \"../project-info\";\nimport {UserService} from \"../../auth/user.service\";\nimport {UserInfo} from \"../../auth/user-info\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {ProjectSummary} from \"../project-summary\";\nimport {TaskSummary} from \"../../tasks/task-summary\";\n\n@Component({\n  selector: 'app-project-details',\n  templateUrl: './project-details.component.html',\n  styleUrls: ['./project-details.component.css']\n})\nexport class ProjectDetailsComponent implements OnInit {\n\n  isError: boolean = false;\n  project$: Observable<ProjectInfo>;\n  project: ProjectInfo;\n  currentUser: UserInfo;\n  isProjectAdmin: boolean;\n  hasTasks: boolean;\n  addTaskLink: any[];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private projectsService: ProjectsService,\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.currentUser = this.userService.currentUser;\n    this.project$ = this.route.paramMap.pipe(\n      tap(() => this.isError = false),\n      switchMap((params: ParamMap) => this.projectsService.getProjectInfo(params.get('projectId')))\n    );\n    this.project$.subscribe((project: ProjectInfo) => {\n      this.project = project;\n      this.isProjectAdmin = project.administrator.email === this.currentUser.email;\n      this.addTaskLink = ['/projects', project.id, 'tasks', 'add'];\n      this.hasTasks = project.tasks.length > 0;\n    }, this.registerHttpError);\n  }\n\n  private registerHttpError(error: HttpErrorResponse) {\n    this.isError = true;\n    console.error(error);\n  }\n\n  removeProject() {\n\n  }\n\n  trackByTasks(index: number, task: TaskSummary): string {\n    return task.id;\n  }\n}\n","import {FileSummary} from \"../files/file-summary\";\n\nexport class ProjectSummary {\n  id: string;\n  name: string;\n  creationDate: Date;\n  lastModifiedFile: FileSummary;\n  numberOfParticipants: number;\n  numberOfTasks: number;\n  numberOfFiles: number;\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card bg-light\\\">\\n  <h3 class=\\\"card-header\\\">\\n    <a [routerLink]=\\\"[project.id]\\\">{{project.name}}</a>\\n  </h3>\\n\\n  <div class=\\\"card-body\\\">\\n    <p class=\\\"card-text\\\">Utworzono {{project.creationDate | date:'long'}}</p>\\n    <p class=\\\"card-text\\\" *ngIf=\\\"project.lastModifiedFile\\\">\\n      {{'dws.project.summary.lastModifiedFile' | translate:project.lastModifiedFile}}\\n    </p>\\n  </div>\\n\\n  <div class=\\\"card-footer\\\">\\n    <span class=\\\"fa fa-user\\\"></span> {{project.numberOfParticipants}}\\n    <span class=\\\"fa fa-tasks\\\"></span> {{project.numberOfTasks}}\\n    <span class=\\\"fa fa-file\\\"></span> {{project.numberOfFiles}}\\n  </div>\\n</div>\\n\"","import {Component, Input} from '@angular/core';\nimport {ProjectSummary} from \"../project-summary\";\n\n@Component({\n  selector: 'project-summary',\n  templateUrl: './project-summary.component.html',\n  styleUrls: ['./project-summary.component.css']\n})\nexport class ProjectSummaryComponent {\n\n  @Input() project: ProjectSummary;\n\n  constructor() { }\n\n}\n","import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {AllProjectsComponent} from \"./all-projects/all-projects.component\";\nimport {ProjectDetailsComponent} from \"./project-details/project-details.component\";\nimport {AuthGuardService} from \"../auth/auth-guard.service\";\nimport {AddProjectComponent} from \"./add-project/add-project.component\";\n\nconst projectsRoutes: Routes = [\n  {\n    path: 'projects/add',\n    component: AddProjectComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'projects/:projectId',\n    component: ProjectDetailsComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'projects',\n    component: AllProjectsComponent,\n    canActivate: [AuthGuardService]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(projectsRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class ProjectsRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AllProjectsComponent} from './all-projects/all-projects.component';\nimport {ProjectDetailsComponent} from './project-details/project-details.component';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {AddProjectComponent} from './add-project/add-project.component';\nimport {ProjectSummaryComponent} from './project-summary/project-summary.component';\nimport {ProjectsRoutingModule} from \"./projects-routing.module\";\nimport {ProjectsService} from \"./projects.service\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {TasksModule} from \"../tasks/tasks.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ProjectsRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    TasksModule\n  ],\n  declarations: [\n    AllProjectsComponent,\n    ProjectDetailsComponent,\n    AddProjectComponent,\n    ProjectSummaryComponent\n  ],\n  providers: [\n    ProjectsService\n  ]\n})\nexport class ProjectsModule {\n}\n","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {ProjectSummary} from \"./project-summary\";\nimport {NewProject} from \"./new-project\";\nimport {ProjectInfo} from \"./project-info\";\n\n@Injectable()\nexport class ProjectsService {\n  constructor(private http: HttpClient) {}\n\n  getAllUserProjects(): Observable<ProjectSummary[]> {\n    return this.http.get<ProjectSummary[]>('/api/projects');\n  }\n\n  createProject(project: NewProject): Observable<string> {\n    return this.http.post('/api/projects', project, {\n      responseType: 'text'\n    });\n  }\n\n  getProjectInfo(projectId: string): Observable<ProjectInfo> {\n    return this.http.get<ProjectInfo>('/api/projects/' + projectId);\n  }\n\n  deleteProject(projectId: string): Observable<any> {\n    return this.http.delete<any>('/api/projects/' + projectId);\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  add-task works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css']\n})\nexport class AddTaskComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  task-details works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-task-details',\n  templateUrl: './task-details.component.html',\n  styleUrls: ['./task-details.component.css']\n})\nexport class TaskDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {FileSummary} from \"../files/file-summary\";\n\nexport class TaskSummary {\n  id: string;\n  name: string;\n  creationDate: Date;\n  lastModifiedFile: FileSummary;\n  numberOfFiles: number;\n  numberOfParticipants: number;\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card bg-light\\\">\\n  <h3 class=\\\"card-header\\\">\\n    <a [routerLink]=\\\"['tasks', task.id]\\\">{{task.name}}</a>\\n  </h3>\\n\\n  <div class=\\\"card-body\\\">\\n    <p class=\\\"card-text\\\">Utworzono {{task.creationDate | date:'long'}}</p>\\n    <p class=\\\"card-text\\\" *ngIf=\\\"task.lastModifiedFile\\\">\\n      {{'dws.task.summary.lastModifiedFile' | translate:task.lastModifiedFile}}\\n    </p>\\n  </div>\\n\\n  <div class=\\\"card-footer\\\">\\n    <i class=\\\"fa fa-file\\\" aria-hidden=\\\"true\\\"></i> {{task.numberOfFiles}}\\n    <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i> {{task.numberOfParticipants}}\\n  </div>\\n</div>\\n\"","import {Component, Input} from '@angular/core';\nimport {TaskSummary} from \"../task-summary\";\n\n@Component({\n  selector: 'task-summary',\n  templateUrl: './task-summary.component.html',\n  styleUrls: ['./task-summary.component.css']\n})\nexport class TaskSummaryComponent {\n\n  @Input()\n  task: TaskSummary;\n\n  constructor() { }\n\n}\n","import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {AddTaskComponent} from \"./add-task/add-task.component\";\nimport {AuthGuardService} from \"../auth/auth-guard.service\";\nimport {TaskDetailsComponent} from \"./task-details/task-details.component\";\n\nconst tasksRoutes: Routes = [\n  {\n    path: 'projects/:projectId/tasks/add',\n    component: AddTaskComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'projects/:projectId/tasks/:taskId',\n    component: TaskDetailsComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'projects/:projectId/tasks',\n    redirectTo: 'projects/:projectId'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(tasksRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class TasksRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TaskDetailsComponent} from './task-details/task-details.component';\nimport {TaskSummaryComponent} from './task-summary/task-summary.component';\nimport {AddTaskComponent} from './add-task/add-task.component';\nimport {TasksRoutingModule} from \"./tasks-routing.module\";\nimport {TranslateModule} from \"@ngx-translate/core\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TasksRoutingModule,\n    TranslateModule\n  ],\n  declarations: [\n    TaskDetailsComponent,\n    TaskSummaryComponent,\n    AddTaskComponent\n  ],\n  exports: [\n    TaskSummaryComponent\n  ]\n})\nexport class TasksModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}